-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               8.0.30 - MySQL Community Server - GPL
-- Server OS:                    Win64
-- HeidiSQL Version:             12.1.0.6537
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- Dumping data for table apr.cache: ~2 rows (approximately)
DELETE FROM `cache`;
INSERT INTO `cache` (`key`, `value`, `expiration`) VALUES
	('356a192b7913b04c54574d18c28d46e6395428ab', 'i:1;', 1736686025),
	('356a192b7913b04c54574d18c28d46e6395428ab:timer', 'i:1736686025;', 1736686025),
	('livewire-rate-limiter:a17961fa74e9275d529f489537f179c05d50c2f3', 'i:1;', 1736653056),
	('livewire-rate-limiter:a17961fa74e9275d529f489537f179c05d50c2f3:timer', 'i:1736653056;', 1736653056);

-- Dumping data for table apr.cache_locks: ~0 rows (approximately)
DELETE FROM `cache_locks`;

-- Dumping data for table apr.exports: ~0 rows (approximately)
DELETE FROM `exports`;

-- Dumping data for table apr.failed_import_rows: ~0 rows (approximately)
DELETE FROM `failed_import_rows`;

-- Dumping data for table apr.failed_jobs: ~0 rows (approximately)
DELETE FROM `failed_jobs`;

-- Dumping data for table apr.imports: ~0 rows (approximately)
DELETE FROM `imports`;
INSERT INTO `imports` (`id`, `completed_at`, `file_name`, `file_path`, `importer`, `processed_rows`, `total_rows`, `successful_rows`, `user_id`, `created_at`, `updated_at`) VALUES
	(1, '2025-01-11 23:01:07', 'mastersupplier.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/ITtWLlTa9sjr3W5wGGF5p9rWN91tso-metabWFzdGVyc3VwcGxpZXIuY3N2-.csv', 'App\\Filament\\Imports\\SupplierImporter', 122, 122, 122, 1, '2025-01-11 22:35:43', '2025-01-11 23:01:07'),
	(2, NULL, 'supplier-importer-example (1).csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/bS73P29jAPb8nKXxKcwiuyRSVl9ur0-metac3VwcGxpZXItaW1wb3J0ZXItZXhhbXBsZSAoMSkuY3N2-.csv', 'App\\Filament\\Imports\\SupplierImporter', 0, 0, 0, 1, '2025-01-11 22:42:01', '2025-01-11 22:42:01'),
	(3, '2025-01-11 23:02:32', 'mastersupplier.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/JfJaQAIJTvdVxlJC8xnSmY11n3pPno-metabWFzdGVyc3VwcGxpZXIuY3N2-.csv', 'App\\Filament\\Imports\\SupplierImporter', 122, 122, 122, 1, '2025-01-11 23:02:29', '2025-01-11 23:02:32'),
	(4, '2025-01-12 01:25:11', 'mastersupplier.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/T4UhTJlVdMakApeqqEHBOb9lLSEHur-metabWFzdGVyc3VwcGxpZXIuY3N2-.csv', 'App\\Filament\\Imports\\SupplierImporter', 122, 122, 122, 1, '2025-01-12 01:24:58', '2025-01-12 01:25:11'),
	(5, '2025-01-12 01:27:55', 'monitor-importer-example.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/sh2yAbtIS1fADdSYW9AGFamaXY7iG6-metabW9uaXRvci1pbXBvcnRlci1leGFtcGxlLmNzdg==-.csv', 'App\\Filament\\Imports\\MonitorImporter', 122, 122, 122, 1, '2025-01-12 01:27:52', '2025-01-12 01:27:55'),
	(6, '2025-01-12 05:18:54', 'monitor-importer-example.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/p8wzUu6TLobBX2BdIeiKkhDyK3iuZO-metabW9uaXRvci1pbXBvcnRlci1leGFtcGxlLmNzdg==-.csv', 'App\\Filament\\Imports\\MonitorImporter', 112, 112, 112, 1, '2025-01-12 05:18:53', '2025-01-12 05:18:54'),
	(7, '2025-01-12 05:24:26', 'monitor-importer-example.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/p2u78nK9xUNJ0VvdsgAAYARjm2SLSw-metabW9uaXRvci1pbXBvcnRlci1leGFtcGxlLmNzdg==-.csv', 'App\\Filament\\Imports\\MonitorImporter', 14, 14, 14, 1, '2025-01-12 05:24:24', '2025-01-12 05:24:26'),
	(8, '2025-01-12 05:33:13', 'monitor-importer-example.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/GiQzk2CX63d9xfeqCdTtNJCtRc6Ect-metabW9uaXRvci1pbXBvcnRlci1leGFtcGxlLmNzdg==-.csv', 'App\\Filament\\Imports\\MonitorImporter', 18, 18, 18, 1, '2025-01-12 05:33:11', '2025-01-12 05:33:13'),
	(9, '2025-01-12 05:36:12', 'monitor-importer-example.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/K0mhRsFwUxGH6yGi9OKokB10FDvcuv-metabW9uaXRvci1pbXBvcnRlci1leGFtcGxlLmNzdg==-.csv', 'App\\Filament\\Imports\\MonitorImporter', 106, 106, 106, 1, '2025-01-12 05:36:08', '2025-01-12 05:36:12'),
	(10, '2025-01-12 05:46:12', 'monitor-importer-example.csv', 'C:\\laragon\\www\\apr\\storage\\app/private\\livewire-tmp/XCy0mNr6KXDv1Wv5nY4TU3BzzTfK06-metabW9uaXRvci1pbXBvcnRlci1leGFtcGxlLmNzdg==-.csv', 'App\\Filament\\Imports\\MonitorImporter', 13, 13, 13, 1, '2025-01-12 05:46:09', '2025-01-12 05:46:12');

-- Dumping data for table apr.jobs: ~0 rows (approximately)
DELETE FROM `jobs`;

-- Dumping data for table apr.job_batches: ~0 rows (approximately)
DELETE FROM `job_batches`;
INSERT INTO `job_batches` (`id`, `name`, `total_jobs`, `pending_jobs`, `failed_jobs`, `failed_job_ids`, `options`, `cancelled_at`, `created_at`, `finished_at`) VALUES
	('9df2c517-e8da-43b1-99e6-b03cb199bd98', '', 2, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3498:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:3:{s:4:"name";s:4:"name";s:6:"period";s:6:"period";s:8:"category";s:8:"category";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:1;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000bbc0000000000000000";}";s:4:"hash";s:44:"XAW/crxG90cyfBg/Nr6t5qFieQSGAS0Eez1PvfsYXj0=";}}}}', NULL, 1736660143, 1736661667),
	('9df2c759-dca8-461b-80e1-fa77a9aeaf7e', '', 0, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3498:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:3:{s:4:"name";s:4:"name";s:6:"period";s:6:"period";s:8:"category";s:8:"category";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:2;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000bb50000000000000000";}";s:4:"hash";s:44:"KDegw7gBszpVrBE008yuqeaDA4BxQmm+hr94Qbjeyw0=";}}}}', NULL, 1736660522, NULL),
	('9df2ceab-72fe-4b34-8f2b-f7ebb55def3a', '', 2, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3498:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:3:{s:4:"name";s:4:"name";s:6:"period";s:6:"period";s:8:"category";s:8:"category";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:3;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000bbc0000000000000000";}";s:4:"hash";s:44:"EU6FqOHPMShaSjhhQzlfopqUmsXU0J7CHomMWlItggs=";}}}}', NULL, 1736661749, 1736661752),
	('9df3019f-c05e-4473-99be-fc61e1135bd2', '', 2, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3498:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:3:{s:4:"name";s:4:"name";s:6:"period";s:6:"period";s:8:"category";s:8:"category";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:4;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000bbc0000000000000000";}";s:4:"hash";s:44:"YvsZh0zU/F9fB9nTFTSnPSl+Ao5JJSElwiDGBH0/qLU=";}}}}', NULL, 1736670298, 1736670311),
	('9df302a8-c876-45ba-9562-591079ee6e01', '', 2, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3534:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:4:{s:8:"supplier";s:8:"supplier";s:10:"apr_period";s:10:"apr_period";s:4:"year";s:4:"year";s:6:"status";s:6:"status";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:5;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000b2c0000000000000000";}";s:4:"hash";s:44:"ZuOQ0hDOSCKCcz6Nn82Noz9aLgbV3m3/LyoQT87dOug=";}}}}', NULL, 1736670472, 1736670475),
	('9df35546-a718-4c5c-a536-9b1253d51b11', '', 2, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3534:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:4:{s:8:"supplier";s:8:"supplier";s:10:"apr_period";s:10:"apr_period";s:4:"year";s:4:"year";s:6:"status";s:6:"status";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:6;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000b420000000000000000";}";s:4:"hash";s:44:"Tng95MzffwLB38YIls3Q2QPhQXG4axaU/p5TD6r7niw=";}}}}', NULL, 1736684333, 1736684334),
	('9df3573f-ab35-4fcf-a2b3-78ef3d9765f6', '', 1, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3534:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:4:{s:8:"supplier";s:8:"supplier";s:10:"apr_period";s:10:"apr_period";s:4:"year";s:4:"year";s:6:"status";s:6:"status";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:7;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000b430000000000000000";}";s:4:"hash";s:44:"I47hKnpdQ6YD1qElI8F2uCw4gaevf9cl+/avvWDqwpY=";}}}}', NULL, 1736684664, 1736684666),
	('9df35a65-34d8-4558-9b9b-c2f1e526b7bc', '', 1, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3534:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:4:{s:8:"supplier";s:8:"supplier";s:10:"apr_period";s:10:"apr_period";s:4:"year";s:4:"year";s:6:"status";s:6:"status";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:8;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000b430000000000000000";}";s:4:"hash";s:44:"DHlCQcO0jeRBfINpJtvMge6p5gYDNoj8ePtqPTf2wV0=";}}}}', NULL, 1736685191, 1736685193),
	('9df35b72-b98f-4b6e-8fca-7bceb79b194f', '', 2, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3534:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:4:{s:8:"supplier";s:8:"supplier";s:10:"apr_period";s:10:"apr_period";s:4:"year";s:4:"year";s:6:"status";s:6:"status";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:9;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000b420000000000000000";}";s:4:"hash";s:44:"csaocvkVEEpe3u8BFPDFJptpQRlQYpo3MTMH1DNcWrg=";}}}}', NULL, 1736685368, 1736685372),
	('9df35f08-5c20-4ce9-ad4c-13af94fb770e', '', 1, 0, 0, '[]', 'a:2:{s:13:"allowFailures";b:1;s:7:"finally";a:1:{i:0;O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:3535:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:4:{s:9:"columnMap";a:4:{s:8:"supplier";s:8:"supplier";s:10:"apr_period";s:10:"apr_period";s:4:"year";s:4:"year";s:6:"status";s:6:"status";}s:6:"import";O:45:"Illuminate\\Contracts\\Database\\ModelIdentifier":5:{s:5:"class";s:38:"Filament\\Actions\\Imports\\Models\\Import";s:2:"id";i:10;s:9:"relations";a:0:{}s:10:"connection";s:5:"mysql";s:15:"collectionClass";N;}s:13:"jobConnection";N;s:7:"options";a:0:{}}s:8:"function";s:2925:"function () use ($columnMap, $import, $jobConnection, $options) {\n                    $import->touch(\'completed_at\');\n\n                    event(new \\Filament\\Actions\\Imports\\Events\\ImportCompleted($import, $columnMap, $options));\n\n                    if (! $import->user instanceof \\Illuminate\\Contracts\\Auth\\Authenticatable) {\n                        return;\n                    }\n\n                    $failedRowsCount = $import->getFailedRowsCount();\n\n                    \\Filament\\Notifications\\Notification::make()\n                        ->title($import->importer::getCompletedNotificationTitle($import))\n                        ->body($import->importer::getCompletedNotificationBody($import))\n                        ->when(\n                            ! $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->success(),\n                        )\n                        ->when(\n                            $failedRowsCount && ($failedRowsCount < $import->total_rows),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->warning(),\n                        )\n                        ->when(\n                            $failedRowsCount === $import->total_rows,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->danger(),\n                        )\n                        ->when(\n                            $failedRowsCount,\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->actions([\n                                \\Filament\\Notifications\\Actions\\Action::make(\'downloadFailedRowsCsv\')\n                                    ->label(trans_choice(\'filament-actions::import.notifications.completed.actions.download_failed_rows_csv.label\', $failedRowsCount, [\n                                        \'count\' => \\Illuminate\\Support\\Number::format($failedRowsCount),\n                                    ]))\n                                    ->color(\'danger\')\n                                    ->url(route(\'filament.imports.failed-rows.download\', [\'import\' => $import], absolute: false), shouldOpenInNewTab: true)\n                                    ->markAsRead(),\n                            ]),\n                        )\n                        ->when(\n                            ($jobConnection === \'sync\') ||\n                                (blank($jobConnection) && (config(\'queue.default\') === \'sync\')),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification\n                                ->persistent()\n                                ->send(),\n                            fn (\\Filament\\Notifications\\Notification $notification) => $notification->sendToDatabase($import->user, isEventDispatched: true),\n                        );\n                }";s:5:"scope";s:29:"Filament\\Actions\\ImportAction";s:4:"this";N;s:4:"self";s:32:"0000000000000b430000000000000000";}";s:4:"hash";s:44:"aC4y7k5MgwwnIm7cWXk1cyYfD8jFm/dEuPha1sHel80=";}}}}', NULL, 1736685969, 1736685972);

-- Dumping data for table apr.migrations: ~1 rows (approximately)
DELETE FROM `migrations`;
INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
	(1, '0001_01_01_000000_create_users_table', 1),
	(2, '0001_01_01_000001_create_cache_table', 1),
	(3, '0001_01_01_000002_create_jobs_table', 1),
	(4, '2025_01_12_033932_create_owners_table', 2),
	(5, '2025_01_12_033933_create_patients_table', 2),
	(6, '2025_01_12_033935_create_treatments_table', 2),
	(7, '2025_01_12_045438_create_suppliers_table', 3),
	(8, '2025_01_12_051202_create_notifications_table', 4),
	(9, '2025_01_12_051224_create_imports_table', 4),
	(10, '2025_01_12_051225_create_exports_table', 4),
	(11, '2025_01_12_051226_create_failed_import_rows_table', 4),
	(12, '2025_01_12_061346_create_monitors_table', 5);

-- Dumping data for table apr.monitors: ~263 rows (approximately)
DELETE FROM `monitors`;
INSERT INTO `monitors` (`id`, `supplier_id`, `apr_period`, `year`, `status`, `created_at`, `updated_at`, `coy`) VALUES
	(1, 1, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(2, 2, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(3, 3, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(4, 4, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(5, 5, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(6, 6, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(7, 7, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(8, 8, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(9, 9, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(10, 10, 'S1', 2024, 'Problem', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(11, 11, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(12, 109, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(13, 12, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(14, 13, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(15, 14, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(16, 15, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(17, 16, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(18, 17, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(19, 18, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(20, 19, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(21, 20, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(22, 21, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(23, 22, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(24, 23, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(25, 24, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(26, 25, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(27, 26, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(28, 27, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(29, 28, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(30, 29, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(31, 30, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(32, 31, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(33, 32, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(34, 33, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(35, 34, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(36, 35, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(37, 36, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(38, 37, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(39, 38, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(40, 39, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(41, 40, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(42, 41, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(43, 42, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(44, 43, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(45, 44, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(46, 45, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(47, 46, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(48, 47, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(49, 48, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(50, 49, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(51, 50, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(52, 51, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(53, 52, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(54, 53, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(55, 54, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(56, 55, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(57, 56, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(58, 57, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(59, 58, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(60, 59, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(61, 60, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(62, 62, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(63, 63, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(64, 64, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(65, 65, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(66, 66, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(67, 67, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:53', '2025-01-12 05:18:53', 'AII'),
	(68, 68, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(69, 69, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(70, 72, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(71, 73, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(72, 74, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(73, 75, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(74, 76, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(75, 77, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(76, 78, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(77, 79, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(78, 80, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(79, 81, 'S1', 2024, 'Problem', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(80, 82, 'S1', 2024, 'Problem', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(81, 84, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(82, 111, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(83, 112, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(84, 113, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(85, 114, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(86, 118, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(87, 120, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(88, 121, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(89, 122, 'Q1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(90, 85, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(91, 86, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(92, 87, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(93, 88, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(94, 89, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(95, 90, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(96, 91, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(97, 92, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(98, 93, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(99, 94, 'S1', 2024, 'Problem', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(100, 95, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(101, 96, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(102, 97, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(103, 98, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(104, 99, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(105, 100, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(106, 101, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(107, 102, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(108, 103, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(109, 104, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(110, 105, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(111, 108, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(112, 109, 'S1', 2024, 'Approval DIR', '2025-01-12 05:18:54', '2025-01-12 05:18:54', 'AII'),
	(113, 110, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:25', '2025-01-12 05:24:25', 'AII'),
	(114, 111, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:25', '2025-01-12 05:24:25', 'AII'),
	(115, 112, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:25', '2025-01-12 05:24:25', 'AII'),
	(116, 113, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:25', '2025-01-12 05:24:25', 'AII'),
	(117, 114, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(118, 115, 'Q2', 2024, 'Problem', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(119, 116, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(120, 18, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(121, 118, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(122, 123, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(123, 123, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(124, 120, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(125, 121, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(126, 122, 'Q2', 2024, 'Approval DIR', '2025-01-12 05:24:26', '2025-01-12 05:24:26', 'AII'),
	(127, 110, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(128, 111, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(129, 112, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(130, 113, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(131, 114, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(132, 115, 'Q3', 2024, 'Problem', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(133, 116, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(134, 18, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(135, 118, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(136, 123, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(137, 123, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(138, 120, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(139, 121, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(140, 122, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(141, 119, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(142, 106, 'Q3', 2024, 'Problem', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(143, 107, 'Q3', 2024, 'Problem', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(144, 108, 'Q3', 2024, 'Approval DIR', '2025-01-12 05:33:13', '2025-01-12 05:33:13', 'AII'),
	(145, 1, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(146, 2, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(147, 3, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(148, 4, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(149, 5, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(150, 6, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(151, 7, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(152, 8, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(153, 9, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(154, 10, 'S2', 2024, 'Problem', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(155, 11, 'S2', 2024, 'Problem', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(156, 12, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(157, 13, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(158, 14, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(159, 15, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(160, 16, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(161, 17, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(162, 18, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(163, 19, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(164, 20, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(165, 21, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(166, 22, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(167, 23, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(168, 24, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(169, 25, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(170, 26, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(171, 27, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(172, 28, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(173, 29, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(174, 30, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(175, 31, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(176, 32, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(177, 33, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(178, 34, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(179, 35, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(180, 36, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(181, 37, 'S2', 2024, 'Problem', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(182, 38, 'S2', 2024, 'Problem', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(183, 39, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(184, 40, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(185, 41, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(186, 42, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(187, 43, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(188, 44, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(189, 45, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(190, 46, 'S2', 2024, 'Problem', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(191, 47, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(192, 48, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(193, 49, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(194, 50, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(195, 51, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(196, 52, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(197, 53, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(198, 54, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(199, 55, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(200, 56, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(201, 57, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(202, 58, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(203, 59, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(204, 60, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(205, 61, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(206, 62, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(207, 63, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(208, 64, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(209, 65, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(210, 66, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(211, 67, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(212, 68, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(213, 69, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(214, 70, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(215, 71, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(216, 72, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(217, 73, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(218, 74, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(219, 75, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(220, 76, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(221, 77, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:11', '2025-01-12 05:36:11', 'AII'),
	(222, 78, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(223, 79, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(224, 80, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(225, 81, 'S2', 2024, 'Problem', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(226, 82, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(227, 83, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(228, 84, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(229, 85, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(230, 86, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(231, 87, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(232, 88, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(233, 89, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(234, 90, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(235, 91, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(236, 92, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(237, 93, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(238, 94, 'S2', 2024, 'Problem', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(239, 95, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(240, 96, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(241, 97, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(242, 98, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(243, 99, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(244, 100, 'S2', 2024, 'Problem', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(245, 101, 'S2', 2024, 'Problem', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(246, 102, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(247, 103, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(248, 104, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(249, 105, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(250, 109, 'S2', 2024, 'Approval DIR', '2025-01-12 05:36:12', '2025-01-12 05:36:12', 'AII'),
	(251, 110, 'Q4', 2024, 'Approval GM', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(252, 111, 'Q4', 2024, 'Approval GM', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(253, 112, 'Q4', 2024, 'PC', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(254, 113, 'Q4', 2024, 'Quotation', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(255, 114, 'Q4', 2024, 'Quotation', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(256, 115, 'Q4', 2024, 'No Quotation', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(257, 116, 'Q4', 2024, 'Approval DIR', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(258, 18, 'Q4', 2024, 'Approval GM', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(259, 118, 'Q4', 2024, 'No Quotation', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(260, 119, 'Q4', 2024, 'Approval GM', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(261, 120, 'Q4', 2024, 'PC', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(262, 121, 'Q4', 2024, 'No Quotation', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII'),
	(263, 122, 'Q4', 2024, 'No Quotation', '2025-01-12 05:46:12', '2025-01-12 05:46:12', 'AII');

-- Dumping data for table apr.notifications: ~0 rows (approximately)
DELETE FROM `notifications`;

-- Dumping data for table apr.owners: ~1 rows (approximately)
DELETE FROM `owners`;
INSERT INTO `owners` (`id`, `email`, `name`, `phone`, `created_at`, `updated_at`) VALUES
	(1, 'teguhyuhono10@gmail.com', 'Teguh', '081296805874', '2025-01-11 20:50:19', '2025-01-11 20:50:19');

-- Dumping data for table apr.password_reset_tokens: ~0 rows (approximately)
DELETE FROM `password_reset_tokens`;

-- Dumping data for table apr.patients: ~1 rows (approximately)
DELETE FROM `patients`;

-- Dumping data for table apr.sessions: ~5 rows (approximately)
DELETE FROM `sessions`;
INSERT INTO `sessions` (`id`, `user_id`, `ip_address`, `user_agent`, `payload`, `last_activity`) VALUES
	('RGxqrrEbUGdCPb0r1NHKb5IxgF3CwYEhgiaz2QVw', 1, '127.0.0.1', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36', 'YTo4OntzOjY6Il90b2tlbiI7czo0MDoicEFjWUxiQ0JYcWo4T0JnNllPQU45Y0FaTzJDTWgyNjE1Sm1pOERadyI7czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6MzI6Imh0dHBzOi8vYXByLnRlc3QvYWRtaW4vZGFzaGJvYXJkIjt9czo2OiJfZmxhc2giO2E6Mjp7czozOiJvbGQiO2E6MDp7fXM6MzoibmV3IjthOjA6e319czo1MDoibG9naW5fd2ViXzU5YmEzNmFkZGMyYjJmOTQwMTU4MGYwMTRjN2Y1OGVhNGUzMDk4OWQiO2k6MTtzOjE3OiJwYXNzd29yZF9oYXNoX3dlYiI7czo2MDoiJDJ5JDEyJFZxNEpqU0lUVzY2LjVaWE85MFlKNGUvdGM0SVRNS3hKeXN6ay9iYm5UOFBzbVIxUkhNS1VHIjtzOjg6ImZpbGFtZW50IjthOjA6e31zOjY6InRhYmxlcyI7YToyOntzOjIyOiJMaXN0U3VwcGxpZXJzX3Blcl9wYWdlIjtzOjI6IjEwIjtzOjIxOiJMaXN0TW9uaXRvcnNfcGVyX3BhZ2UiO3M6MjoiMjUiO31zOjE3OiJEYXNoYm9hcmRfZmlsdGVycyI7YToxOntzOjQ6InllYXIiO3M6NDoiMjAyNSI7fX0=', 1736696757);

-- Dumping data for table apr.suppliers: ~0 rows (approximately)
DELETE FROM `suppliers`;
INSERT INTO `suppliers` (`id`, `name`, `period`, `category`, `created_at`, `updated_at`) VALUES
	(1, 'IRON WIRE WORKS INDONESIA PT', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(2, 'MICS STEEL INDONESIA', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(3, 'SUMITOMO INDONESIA PT', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(4, 'ADVANEX PRECISION PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(5, 'ARMSTRONG INDUSTRI INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(6, 'AT INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(7, 'AUTOMOTIVE FASTENERS AOYAMA INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(8, 'CHUGAI BUSSAN INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(9, 'CHUHATSU INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(10, 'EXEDY PRIMA INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(11, 'FINE SINTER INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(12, 'HI-LEX INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(13, 'INDOPRIMA GEMILANG PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(14, 'INDOPRIMA GEMILANG PT (Raw Material)', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(15, 'INDOSAFETY SENTOSA INDUSTRY PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(16, 'INDOSPRING PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(17, 'INDOTECH METAL NUSANTARA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(18, 'JAKARTA KOKOKU INTECH PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(19, 'JTEKT INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(20, 'KAWASHIMA ENGINEERING PLASTIC', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(21, 'KHN-METAL INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(22, 'KIYOKUNI INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(23, 'KOJIMA MANUFACTURING INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(24, 'MENARA TERUS MAKMUR', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(25, 'MITOKURUBBER PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(26, 'MORITA TJOKRO GEARINDO PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(27, 'MUSASHI AUTO PARTS INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(28, 'NESINAK INDUSTRIES PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(29, 'NICHIAS SUNIJAYA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(30, 'NIDEC SANKYO PRECISION INDONESIA P', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(31, 'NITTO ALAM INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(32, 'NITTO MATERIALS INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(33, 'SAGATEKNINDO SEJATI PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(34, 'SAINT GOBAIN PERFORMANCE PLASTICS PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(35, 'SARI TAKAGI ELOK PRODUK PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(36, 'SHINKO KOGYO INDONESIA PT (MACHINING FOR ATI)', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(37, 'KINGDUAN CPS SHINKO KOGYO', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(38, 'SHINKO KOGYO INDONESIA PT (FROM KINGDUAN)', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(39, 'SINAR ALUM SARANA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(40, 'SUGIURA INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(41, 'TECHNO HOEI INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(42, 'YAHATA FASTENER INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(43, 'YAMANI SPRING INDONESIA PT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(44, 'ACTMETAL INDONESIA PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(45, 'ADHI CHANDRA JAYA PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(46, 'ANUGERAH DAYA INDUSTRI KOMPONEN UTAMA PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(47, 'ELEKTROPLATING SUPERINDO PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(48, 'INDOPLATING TECHNOLOGY INDUSTRY PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(49, 'MARUHACHI INDONESIA PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(50, 'MITRA MAKMUR GEMILANG PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(51, 'PARKER METAL TREATMENT IND PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(52, 'SANENG INDUSTRIAL PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(53, 'SURTECKARIYA INDONESIA PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(54, 'TAIKISHA MANUFACTURING INDONESIA PT', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(55, 'ADIKU CPS MTM', '6', 'SUBC CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(56, 'IWWI CPS TECHNO HOEI', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(57, 'IWWI CPS YAHATA', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(58, 'TTI CHM CPS NIDEC', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(59, 'TTI CHM CPS KEPI', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(60, 'TTI CHM CPS KOJIMA', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(61, 'TTI CHM CPS NIPPO', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(62, 'INABATA CPS NIDEC', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(63, 'INABATA CPS KEPI', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(64, 'INABATA CPS KOJIMA', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(65, 'NICHIAS CPS INDOSAFETY', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(66, 'HANWA CPS INDOPRIMA', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(67, 'HANWA CPS INDOTECH', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(68, 'HANWA CPS SUNSTAR', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(69, 'SUNSTAR INDONESIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(70, 'INABATA CPS NIPPO', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(71, 'INABATA CPS FID', '6', 'COMP CPS', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(72, 'SUNSTAR INDONESIA (RAW MATERIAL)', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(73, 'NOK SALES INDONESIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(74, 'NIPPO MECHATRONIC', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(75, 'YOHZU INDONESIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(76, 'MATSUO INDONESIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(77, 'SANKYO TRADER INTERNATIONAL INDONESIA', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(78, 'TSUCHIYA INDONESIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(79, 'FUJISEIKI INDONESIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(80, 'COPPAL UTAMA INDOMELT', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(81, 'FUKUYAMA GIKEN', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(82, 'TTI (Metal) CPS FUKUYAMA GIKEN', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(83, 'TTI (Metal) CPS KINGDUAN', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(84, 'PATEC PRESISI ENGINEERING', '6', 'SUBC', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(85, 'CKD', '12', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(86, 'AISIN CHEM', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(87, 'AISIN ASIA - EFM', '12', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(88, 'AISIN ASIA - AHL', '12', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(89, 'AISIN ASIA - SIAM', '12', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(90, 'AISIN ASIA - PANASONC', '12', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(91, 'MABUCHI', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(92, 'TSUCHIYA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(93, 'TTC TAIWAN', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(94, 'NHK SPRING', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(95, 'EXEDY MALAYSIA', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(96, 'YPC PRECISION', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(97, 'TAGA PRECISION SINGAPORE', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(98, 'AIDO', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(99, 'MINEBEA SINGAPORE', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(100, 'ITO ELECTRONIC - THAI', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(101, 'ITO ELECTRONIC - JPN', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(102, 'SUZHOU', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(103, 'HAYASHI', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(104, 'TTK', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(105, 'TTC-PROSTEEL', '6', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(106, 'TTC-NSC', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(107, 'TTC-JFE', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(108, 'MOLITEC', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(109, 'FUJITARASHI', '6', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(110, 'HONDA TRADING INDONESIA PT', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(111, 'INABATA INDONESIA PT', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(112, 'JFE SHOJI STEEL INDONESIA', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(113, 'STEEL CENTER INDONESIA PT', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(114, 'TOYOTA TSUSHO INDONESIA  PT - CHM', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(115, 'DENSO SALES INDONESIA PT', '3', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(116, 'EKAMITRA JAYATAMA PT', '3', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(117, 'JAKARTA KOKOKU INTECH PT', '3', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(118, 'TOYOTA TSUSHO INDONESIA  PT', '3', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(119, 'IJPC POSCO', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(120, 'TTI (Metal) CPS Kingduan (HVD)', '3', 'RM', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(121, 'Kingduan (HVD) CPS SHINKO KOGYO (HVD)', '3', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(122, 'Shinko Kogyo --> ADIKU (HVD)', '3', 'COMP', '2025-01-12 01:25:11', '2025-01-12 01:25:11'),
	(123, 'UNITED STEEL CENTER INDONESIA', '3', 'RM', '2025-01-12 05:22:28', '2025-01-12 05:22:28'),
	(124, 'SUPER STEEL KARAWANG', '3', 'RM', '2025-01-12 05:22:35', '2025-01-12 05:22:35');

-- Dumping data for table apr.treatments: ~1 rows (approximately)
DELETE FROM `treatments`;

-- Dumping data for table apr.users: ~1 rows (approximately)
DELETE FROM `users`;
INSERT INTO `users` (`id`, `name`, `email`, `email_verified_at`, `password`, `remember_token`, `created_at`, `updated_at`) VALUES
	(1, 'admin', 'admin@admin.com', NULL, '$2y$12$Vq4JjSITW66.5ZXO90YJ4e/tc4ITMKxJyszk/bbnT8PsmR1RHMKUG', NULL, '2025-01-11 20:34:17', '2025-01-11 20:34:17');

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
